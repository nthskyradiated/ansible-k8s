---
- name: Create apt keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: true
  when: "'loadbalancers' not in group_names"

- name: Download Kubernetes GPG key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    mode: '0644'
  become: true

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg trusted=yes] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
    state: present
  become: true

- name: Install Kubernetes components
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
  become: true
  when: "'loadbalancers' not in group_names"

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl
  become: true
  notify:
    - Start and enable kubelet
    - Reload systemd

- name: Check HAProxy status
  ansible.builtin.wait_for:
    host: "{{ hostvars['loadbalancer']['ansible_host'] }}"
    port: 6443
    timeout: 30
  register: haproxy_status
  ignore_errors: true
  when: inventory_hostname == 'controlplane01'

- name: Initialize Kubernetes cluster
  ansible.builtin.shell: |
    kubeadm init --pod-network-cidr={{ pod_cidr }} \
    --service-cidr={{ service_cidr }} \
    {% if haproxy_status is defined and not haproxy_status.failed %}
    --control-plane-endpoint="{{ hostvars['loadbalancer']['ansible_host'] }}:6443" \
    {% endif %}
    --upload-certs \
    --skip-phases=addon/kube-proxy | tee /home/vagrant/kubeadm-init-output.txt
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init
  when: inventory_hostname == 'controlplane01'
  become: true

- name: Copy kubeconfig to vagrant home
  ansible.builtin.shell: |
    mkdir -p /home/vagrant/.kube
    cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    chown vagrant:vagrant /home/vagrant/.kube/config
  when: inventory_hostname == 'controlplane01'
  become: true
  changed_when: false