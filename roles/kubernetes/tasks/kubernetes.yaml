---
- name: Create apt keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: true
  when: "'loadbalancers' not in group_names"

- name: Download Kubernetes GPG key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    mode: '0644'
  become: true

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg trusted=yes] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
    state: present
  become: true

- name: Install Kubernetes components
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
  become: true
  when: "'loadbalancers' not in group_names"
  register: install_k8s
  retries: 5
  delay: 5
  until: install_k8s is success

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl
  become: true
  notify:
    - Start and enable kubelet
    - Reload systemd

- name: Set loadbalancer facts
  ansible.builtin.set_fact:
    lb_available: "{{ groups['loadbalancers'] is defined and groups['loadbalancers'] | length > 0 }}"
   
- name: Check if loadbalancer is reachable
  ansible.builtin.uri:
    url: "https://{{ hostvars['loadbalancer']['ansible_host'] }}:6443/version"
    validate_certs: false
  register: lb_ping
  when: 
    - lb_available | bool
    - inventory_hostname == 'controlplane01'
  ignore_errors: true

- name: Initialize Kubernetes cluster
  ansible.builtin.shell: |
    # Reset any previous failed attempts
    kubeadm reset -f
    # Initialize cluster with conditional endpoint
    kubeadm init \
    --pod-network-cidr={{ pod_cidr }} \
    --service-cidr={{ service_cidr }} \
    {% if lb_available and lb_ping is success %}
    --control-plane-endpoint="{{ hostvars['loadbalancer']['ansible_host'] }}:6443" \
    {% endif %}
    --upload-certs --v=5 \
    --skip-phases=addon/kube-proxy 2>&1 | tee /home/vagrant/kubeadm-init-output.txt
  when: inventory_hostname == 'controlplane01'
  become: true
  changed_when: false

- name: Ensure .kube directory exists
  ansible.builtin.file:
    path: /home/vagrant/.kube
    state: directory
    owner: vagrant
    group: vagrant
    mode: '0755'
  when: inventory_hostname == 'controlplane01'
  become: true

- name: Copy kubeconfig
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: true
    owner: vagrant
    group: vagrant
    mode: '0600'
  when: inventory_hostname == 'controlplane01'
  become: true
  changed_when: false
